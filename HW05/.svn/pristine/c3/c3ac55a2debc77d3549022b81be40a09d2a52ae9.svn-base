package model.Strategy;

import model.Ball;
import model.IBallCmd;
import model.IInteractStrategy;
import model.IUpdateStrategy;
import model.MultiInteractStrategy;
import util.IDispatcher;

public class EatStrategy <TDispMsg> implements IUpdateStrategy<TDispMsg>{

	@Override
	public void init(Ball context) {
		context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), 
				new IInteractStrategy() 
		{
			public void interact(Ball context, Ball target, IDispatcher<IBallCmd> disp) {
				double contextMass = context.getRadius() * context.getRadius();
				double targetMass = target.getRadius() * target.getRadius();
				double newMass = contextMass + targetMass;
				context.setRadius((int)Math.sqrt(newMass));
				disp.deleteObserver(target);
			}
		}));
	}

	@Override
	public void updateState(Ball context, IDispatcher<TDispMsg> dispatcher) {		
	}

}
