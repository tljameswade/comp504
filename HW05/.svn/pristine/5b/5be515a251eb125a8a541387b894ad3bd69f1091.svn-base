package model.Strategy;

import model.Ball;
import model.IBallCmd;
import model.IUpdateStrategy;
import util.IDispatcher;

/**
 * 
 * @author lenovo-1
 *
 * @param <TDispMsg>
 */
public class KillStrategy<TDispMsg> implements IUpdateStrategy<IBallCmd> {

	@Override
	public void init(Ball context) {
	}

	@Override
	public void updateState(Ball ball, IDispatcher<IBallCmd> dispatcher) {
		dispatcher.dispatch(new IBallCmd(){
			@Override
			public void apply(Ball other, IDispatcher<IBallCmd> dispatcher) {
				if(ball!=other){
					double distance = ball.getLocation().distance(other.getLocation());
					if( distance<=(ball.getRadius()+other.getRadius()) ){
						dispatcher.deleteObserver(other);
					}
				}
			}
		});
	}

}
