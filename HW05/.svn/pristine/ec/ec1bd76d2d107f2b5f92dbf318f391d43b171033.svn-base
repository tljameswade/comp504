package model.Strategy;

import model.Ball;
import model.IBallCmd;
import model.IInteractStrategy;
import model.IUpdateStrategy;
import model.MultiInteractStrategy;
import util.IDispatcher;

/**
 * 
 * @author lenovo-1
 *
 * @param <TDispMsg>
 */
public class KillStrategy<TDispMsg> implements IUpdateStrategy<TDispMsg> {

	@Override
	public void init(Ball context) {
		context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), 
				new IInteractStrategy() 
		{
			public void interact(Ball context, Ball target, IDispatcher<IBallCmd> disp) {
				disp.deleteObserver(target);
			}
		}));
	}

	@Override
	public void updateState(Ball context, IDispatcher<TDispMsg> dispatcher) {
	}
}
