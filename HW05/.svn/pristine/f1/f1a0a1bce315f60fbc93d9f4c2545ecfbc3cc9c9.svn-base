package model.paint.shape;

import java.awt.Point;
import java.awt.Polygon;
import java.awt.Shape;
import java.awt.geom.AffineTransform;

/**
 * @author Suozhi Qi, Zhou Liu
 *
 */
public class PolygonFactory implements IShapeFactory{
	
	private AffineTransform at;
	
	private Polygon poly = new Polygon();
	
	private double scaleFactor = 1.0;
	
	/**
	 * @param at
	 * @param scaleFactor
	 * @param pts
	 */
	public PolygonFactory(AffineTransform at, double scaleFactor, Point... pts) {
		this.at = at;
		this.scaleFactor = scaleFactor;
		for (Point points : pts) {
			poly.addPoint(points.x, points.y);
		}
	}

	@Override
	public Shape makeShape(double x, double y, double xScale, double yScale) {
		at.setToTranslation(x, y);
		at.scale(xScale * scaleFactor, yScale * scaleFactor);
		return at.createTransformedShape(poly);
	}

}
