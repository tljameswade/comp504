package model.paint.strategy;

import java.awt.Graphics;
import java.awt.geom.AffineTransform;

import model.Ball;
import model.paint.MultiPaintStrategy;

/**
 * @author zhou
 *
 */
public class CompositeShapePaintStrategy extends MultiPaintStrategy{
	
	/**
	 * pass the AffineTransform 
	 */
	public CompositeShapePaintStrategy() {
		this(new AffineTransform());
	}
	
	/**
	 * @param at
	 */
	public CompositeShapePaintStrategy(AffineTransform at) {
		super(new EllipsePaintStrategy(new AffineTransform(), 0, -2, 1, 1), 
				new RectanglePaintStrategy(new AffineTransform(), 0, -0.5, 1.5, 0.5),
				new RectanglePaintStrategy(new AffineTransform(), -1, 1.5, 0.5, 1.5),
				new RectanglePaintStrategy(new AffineTransform(), 1, 1.5, 0.5, 1.5));
	}
	
	@Override	
	public void paintCfg(Graphics g, Ball host) {
		super.paintCfg(g, host);
		if(Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x))> Math.PI/2.0) {
		  at.scale(1.0, -1.0);
		}
	}
}
