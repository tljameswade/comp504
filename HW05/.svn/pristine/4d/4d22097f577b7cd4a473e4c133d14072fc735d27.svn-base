package model.Strategy;

import java.awt.Point;

import javax.swing.Timer;

import model.Ball;
import model.IBallCmd;
import model.IPaintStrategy;
import model.IUpdateStrategy;
import util.IDispatcher;

public class LaunchStrategy<TDispMsg> implements IUpdateStrategy<IBallCmd> {
	
	@Override
	public void init(Ball context) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void updateState(Ball ball, IDispatcher<IBallCmd> dispatcher) {
		dispatcher.dispatch(new IBallCmd(){
			@Override
			public void apply(Ball other, IDispatcher<IBallCmd> dispatcher) {
				double safeDistance = 30;
				if(ball!=other){
					double distance = ball.getLocation().distance(other.getLocation());
					if( distance <= (ball.getRadius()+other.getRadius()+safeDistance) ){
						ball.getVelocity().x = other.getVelocity().x;
						ball.getVelocity().y = other.getVelocity().y;
						
						dispatcher.addObserver(new Ball(
								new Point(ball.getLocation()), 
								2, 
								new Point(-ball.getVelocity().x, -ball.getVelocity().y), 
								ball.getColor(), 
								ball.getCanvas(), 
								new DareToDieStrategy<IBallCmd>(), 
								ball.getPaintStrategy()));
								
					}
				}
			}
		});
	}

}
