package model;

import model.Strategy.IUpdateStrategy;
import util.Dispatcher;

/**
 * this class is used when combine two strategy
 * there are two variants
 * @author SuozhiQi,HongyangZhang
 *
 */
public class MultiStrategy implements IUpdateStrategy {

	/**
	 * One of the strategies to be combined
	 */
	IUpdateStrategy s1;

	/**
	 * The other one of the strategies to be combined
	 */
	IUpdateStrategy s2;

	/**
	 * The multistrategy constructor to take two strategies
	 * @param s1 One of the strategies to be combined
	 * @param s2 The other one of the strategies to be combined
	 */
	public MultiStrategy(IUpdateStrategy s1, IUpdateStrategy s2) {
		this.s1 = s1;
		this.s2 = s2;
	}

	/**
	 * when update, features of both strategies will be updated
	 */
	@Override
	public void updateState(Ball ball, Dispatcher dispatcher) {
		s1.updateState(ball, dispatcher);
		s2.updateState(ball, dispatcher);
	}

}
