package model.Strategy;

import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Point2D;
import javax.swing.Timer;

import model.Ball;
import model.IBallCmd;
import model.IUpdateStrategy;
import util.IDispatcher;
import util.Randomizer;

/**
 * 
 * @author lenovo-1
 *
 */
public class SpawnStrategy<TDispMsg> implements IUpdateStrategy<IBallCmd> {

	
	@Override
	public void init(Ball context) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void updateState(Ball ball, IDispatcher<IBallCmd> dispatcher) {
		dispatcher.dispatch(new IBallCmd(){

			@Override
			public void apply(Ball other, IDispatcher<IBallCmd> dispatcher) {
				if(ball!=other){
					double distance = ball.getLocation().distance(other.getLocation());
					if(distance<Math.abs(other.getRadius()-ball.getRadius())){	
						System.out.println("spawn");
						dispatcher.addObserver(new Ball(
							new Point(ball.getLocation()), 
							ball.getRadius(),
							new Point(-ball.getVelocity().x, -ball.getVelocity().y), 
							ball.getColor(),
							ball.getCanvas(), 
							new SpawnStrategy<IBallCmd>(), 
							ball.getPaintStrategy())
						);
					}
				}
				
			}
			
		});
	}

}
